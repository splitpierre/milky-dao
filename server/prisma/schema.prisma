// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

// model Voter {
//   id                                  String      @id @default(cuid())  
//   createdAt                           DateTime?  @default(now())
//   name                                String
//   address                             String
// }

model User {
  id                                  String     @id @default(cuid()) 
  createdAt                           DateTime?  @default(now())
  name                                String?
  address                             String @unique
  nonce                               String? @db.VarChar(255)
  apiKey                              String? @db.VarChar(255)
  roles UserRole[] 
  proposal Proposal[]
  project Project[]
  votes Votes[]
}

model UserRole {
  id                                  String     @id @default(cuid()) 
  name                                String @unique
  permissions                         Json?
  users User[]
}

model Proposal {
  id                                  String     @id @default(cuid()) 
  createdAt                           DateTime?  @default(now())
  startAt                             DateTime? @default(now())
  endAt                               DateTime?
  title                               String @db.Text
  description                         String? @db.Text
  status EnumProposalStatus?
  project Project                     @relation(fields: [projectId], references: [id])
  projectId                           String
  user User                           @relation(fields: [userId], references: [id])
  userId                              String 
  votes Votes[]
}

model Category {
    id                                String     @id @default(cuid()) 
    createdAt                         DateTime?  @default(now())
    title                             String @db.Text
    slug                              String  @unique 
    projects Project[]
}
model Project {
    id                                String     @id @default(cuid()) 
    createdAt                         DateTime?  @default(now())
    title                             String
    slug                              String @unique
    iconImage                         String?
    shortDescription                  String? @db.LongText
    fullDescription                   String? @db.LongText
    status EnumProposalStatus?
    categories Category[] 
    proposals Proposal[]
    user User                         @relation(fields: [userId], references: [id])
    userId                            String
}

model Votes {
  id                                String     @id @default(cuid()) 
  address                           String
  choice                            String?
  user User                         @relation(fields: [userId], references: [id])
  userId                            String
  proposal Proposal                 @relation(fields: [proposalId], references: [id])
  proposalId                        String
}

enum EnumProposalStatus {
  Active
  Pending
  Closed
}
