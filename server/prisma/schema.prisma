// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Voter {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime?  @default(now())
  name  String
  address String
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime?  @default(now())
  name String?
  address String @unique
  nonce String?
  apiKey String?
  rolesEnum String[]
  roles RolesOnUser[] 
  proposal Proposal[]
  project Project[]
}

model UserRole {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  users RolesOnUser[]
}

model RolesOnUser {
  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade) 
  userId String
  role UserRole @relation(fields: [roleId], references: [id])
  roleId String
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Proposal {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime?  @default(now())
  title String
  description String
  status EnumProposalStatus?
  user User @relation(fields: [userId], references: [id])
  userId String
}

model Category {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime?  @default(now())
    title String
    slug String @unique
    projects CategoriesOnProject[]
}
model Project {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    createdAt DateTime?  @default(now())
    title String
    description String
    categories CategoriesOnProject[]
    user User @relation(fields: [userId], references: [id])
    userId String
}

model CategoriesOnProject {
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String
  project Project @relation(fields: [projectId], references: [id])
  projectId String
  assignedAt DateTime @default(now())
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

enum EnumProposalStatus {
  Active
  Pending
  Closed
}